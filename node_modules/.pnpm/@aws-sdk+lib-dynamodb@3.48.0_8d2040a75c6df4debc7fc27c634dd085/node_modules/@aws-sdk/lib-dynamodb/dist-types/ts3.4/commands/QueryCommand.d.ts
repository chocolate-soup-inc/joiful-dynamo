import { Condition, QueryCommandInput as __QueryCommandInput, QueryCommandOutput as __QueryCommandOutput } from "@aws-sdk/client-dynamodb";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MiddlewareStack } from "@aws-sdk/types";
import { NativeAttributeValue } from "@aws-sdk/util-dynamodb";
import { DynamoDBDocumentClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DynamoDBDocumentClient";
export declare type QueryCommandInput = Pick<__QueryCommandInput, Exclude<keyof __QueryCommandInput, "KeyConditions" | "QueryFilter" | "ExclusiveStartKey" | "ExpressionAttributeValues">> & {
    KeyConditions?: {
        [key: string]: Pick<Condition, Exclude<keyof Condition, "AttributeValueList">> & {
            AttributeValueList?: NativeAttributeValue[];
        };
    };
    QueryFilter?: {
        [key: string]: Pick<Condition, Exclude<keyof Condition, "AttributeValueList">> & {
            AttributeValueList?: NativeAttributeValue[];
        };
    };
    ExclusiveStartKey?: {
        [key: string]: NativeAttributeValue;
    };
    ExpressionAttributeValues?: {
        [key: string]: NativeAttributeValue;
    };
};
export declare type QueryCommandOutput = Pick<__QueryCommandOutput, Exclude<keyof __QueryCommandOutput, "Items" | "LastEvaluatedKey">> & {
    Items?: {
        [key: string]: NativeAttributeValue;
    }[];
    LastEvaluatedKey?: {
        [key: string]: NativeAttributeValue;
    };
};

export declare class QueryCommand extends $Command<QueryCommandInput, QueryCommandOutput, DynamoDBDocumentClientResolvedConfig> {
    readonly input: QueryCommandInput;
    private readonly inputKeyNodes;
    private readonly outputKeyNodes;
    constructor(input: QueryCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DynamoDBDocumentClientResolvedConfig, options?: __HttpHandlerOptions): Handler<QueryCommandInput, QueryCommandOutput>;
}
