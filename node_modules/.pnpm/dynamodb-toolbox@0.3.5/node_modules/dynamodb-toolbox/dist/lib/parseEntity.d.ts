/**
 * DynamoDB Toolbox: A simple set of tools for working with Amazon DynamoDB
 * @author Jeremy Daly <jeremy@jeremydaly.com>
 * @license MIT
 */
import { EntityConstructor } from '../classes/Entity';
export interface TrackingInfo {
    fields: string[];
    defaults: any;
    required: any;
    linked: Linked;
    keys: any;
}
export interface Linked {
    [key: string]: string[];
}
export interface TrackingInfoKeys {
    partitionKey?: string;
    sortKey?: string;
}
export declare type ParsedEntity = ReturnType<typeof parseEntity>;
export declare function parseEntity(entity: EntityConstructor): {
    name: string;
    schema: {
        keys: any;
        attributes: import("../classes/Entity").EntityAttributeConfiguration;
    };
    defaults: any;
    required: any;
    linked: Linked;
    autoExecute: boolean | undefined;
    autoParse: boolean | undefined;
    _etAlias: string;
} & ({
    table: import("../classes/Table").default;
} | {
    table?: undefined;
});
export default parseEntity;
