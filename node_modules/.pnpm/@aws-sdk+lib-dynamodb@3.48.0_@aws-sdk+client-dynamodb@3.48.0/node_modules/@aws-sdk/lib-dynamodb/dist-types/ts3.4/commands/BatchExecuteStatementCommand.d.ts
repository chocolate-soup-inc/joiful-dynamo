import { BatchExecuteStatementCommandInput as __BatchExecuteStatementCommandInput, BatchExecuteStatementCommandOutput as __BatchExecuteStatementCommandOutput, BatchStatementRequest, BatchStatementResponse } from "@aws-sdk/client-dynamodb";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MiddlewareStack } from "@aws-sdk/types";
import { NativeAttributeValue } from "@aws-sdk/util-dynamodb";
import { DynamoDBDocumentClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../DynamoDBDocumentClient";
export declare type BatchExecuteStatementCommandInput = Pick<__BatchExecuteStatementCommandInput, Exclude<keyof __BatchExecuteStatementCommandInput, "Statements">> & {
    Statements: (Pick<BatchStatementRequest, Exclude<keyof BatchStatementRequest, "Parameters">> & {
        Parameters?: NativeAttributeValue[];
    })[] | undefined;
};
export declare type BatchExecuteStatementCommandOutput = Pick<__BatchExecuteStatementCommandOutput, Exclude<keyof __BatchExecuteStatementCommandOutput, "Responses">> & {
    Responses?: (Pick<BatchStatementResponse, Exclude<keyof BatchStatementResponse, "Item">> & {
        Item?: {
            [key: string]: NativeAttributeValue;
        };
    })[];
};

export declare class BatchExecuteStatementCommand extends $Command<BatchExecuteStatementCommandInput, BatchExecuteStatementCommandOutput, DynamoDBDocumentClientResolvedConfig> {
    readonly input: BatchExecuteStatementCommandInput;
    private readonly inputKeyNodes;
    private readonly outputKeyNodes;
    constructor(input: BatchExecuteStatementCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: DynamoDBDocumentClientResolvedConfig, options?: __HttpHandlerOptions): Handler<BatchExecuteStatementCommandInput, BatchExecuteStatementCommandOutput>;
}
