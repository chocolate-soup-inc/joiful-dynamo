import { DocumentClient } from 'aws-sdk/clients/dynamodb';
import { Entity } from 'dynamodb-toolbox';
import { queryOptions, scanOptions } from 'dynamodb-toolbox/dist/classes/Table';
import * as Joi from 'joi';
import { BatchWriteOptions, DeleteOptions, GetOptions, PutOptions, UpdateOptions } from './dynamodbToolboxTypes';
declare function createJDModel(entity: Entity<{}>, joi: Joi.ObjectSchema<{}>, attributesAliases: Record<string, undefined | string | string[]>, beforeValidate?: (attributes: Record<string, any>) => Partial<Record<string, any>>): {
    new (item?: Record<string, any>): {
        _attributes: Record<string | symbol, any>;
        _validatedAttributes: Record<string | symbol, any>;
        entity: Entity<{}>;
        joi: Joi.ObjectSchema<{}>;
        attributes: Record<string | symbol, any>;
        readonly validatedAttributes: Record<string | symbol, any>;
        validate(): {};
        delete(option: DeleteOptions, params: DocumentClient.DeleteItemInput): Promise<any>;
        get(option: GetOptions, params: DocumentClient.GetItemInput): Promise<any>;
        put(options: PutOptions, params: DocumentClient.PutItemInput): Promise<any>;
        update(options: UpdateOptions, params: DocumentClient.UpdateItemInput): Promise<DocumentClient.UpdateItemInput | import("aws-sdk/lib/request").PromiseResult<DocumentClient.UpdateItemOutput, import("aws-sdk/lib/error").AWSError>>;
        getTransformedAttributes(): Promise<any>;
    };
    validate: (item: Record<string, any>, throwError?: boolean) => {};
    batchWrite: (items: Record<string, any>[], batchWriteOptions?: BatchWriteOptions, params?: DocumentClient.BatchWriteItemInput) => Promise<any>;
    delete: (item: Record<string, any>, options?: DeleteOptions, params?: DocumentClient.DeleteItemInput) => Promise<any>;
    get: (item: Record<string, any>, options?: GetOptions, params?: DocumentClient.GetItemInput) => Promise<any>;
    put: (item: Record<string, any>, options?: PutOptions, params?: DocumentClient.PutItemInput) => Promise<any>;
    update: (item: Record<string, any>, options?: UpdateOptions, params?: DocumentClient.UpdateItemInput) => Promise<DocumentClient.UpdateItemInput | import("aws-sdk/lib/request").PromiseResult<DocumentClient.UpdateItemOutput, import("aws-sdk/lib/error").AWSError>>;
    query: (pk: Record<string, any>, options?: queryOptions, params?: DocumentClient.QueryInput) => Promise<any>;
    queryAll(pk: Record<string, any>, options: queryOptions, params: DocumentClient.QueryInput): Promise<any>;
    scan: (options?: scanOptions, params?: DocumentClient.ScanInput) => Promise<any>;
    scanAll(options: scanOptions, params: DocumentClient.ScanInput): Promise<any>;
    getTransformedAttributes: (attributes: Record<string, any>) => Promise<any>;
};
export default createJDModel;
